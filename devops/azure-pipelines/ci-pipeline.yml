trigger:
  branches:
    include:
    - main
    - develop
    - feature/*

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  dockerRegistry: 'dockerhub'
  dockerRepositoryName: 'moneywise'
  sonarQubeProjectKey: 'moneywise'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
        codeCoverageEnabled: true

    - task: SonarQubePrepare@5
      inputs:
        SonarQube: 'SonarQube'
        scannerMode: 'MSBuild'
        projectKey: '$(sonarQubeProjectKey)'

    - task: SonarQubeAnalyze@5
    - task: SonarQubePublish@5

    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistry)'
        repository: '$(dockerRepositoryName)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildNumber)
          latest

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          # Send email notification with SonarQube results
          $sonarQubeUrl = "$(sonarQubeUrl)/dashboard?id=$(sonarQubeProjectKey)"
          Send-MailMessage -From "devops@moneywise.com" -To "team@moneywise.com" -Subject "SonarQube Analysis Results" -Body "SonarQube analysis completed. View results at: $sonarQubeUrl"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
